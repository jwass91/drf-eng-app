{"version":3,"sources":["components/NavBar.tsx","components/CirclePoint.tsx","components/Circle.tsx","store/types.ts","components/Form.tsx","store/actions.ts","App.tsx","store/reducers.ts","index.tsx"],"names":["NavBar","AppBar","position","color","Toolbar","Typography","variant","style","flexGrow","CirclePoint","backgroundColor","grey","width","this","props","thickness","height","top","radius","Math","sin","angle","left","cos","borderRadius","React","PureComponent","pointGenerator","Circle","margin","marginTop","showCircle","steps","i","key","PI","connect","state","UPDATE_ROOM","JOIN","SET_SOCKET","UPDATE_CIRCLE_VISIBILITY","Form","onInputChange","e","updateRoom","target","value","onSubmit","preventDefault","join","onShow","undefined","socket","emit","onHide","Paper","padding","Grid","container","xs","item","paddingRight","TextField","placeholder","room","onChange","onKeyPress","cb","handleEnterKeyPress","fullWidth","disabled","live","Button","onClick","GreenButton","type","withStyles","root","green","borderColor","theme","createMuiTheme","palette","primary","blue","secondary","pink","App","updateCircleVisibility","io","on","console","log","setSocket","MuiThemeProvider","className","Component","initialState","store","createStore","action","produce","draft","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.363a047f.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\n\nconst NavBar: React.FC = () => {\n  return (\n    <AppBar position=\"static\" color=\"primary\">\n      <Toolbar>\n        <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\n          DRF-ENG-APP\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { grey } from \"@material-ui/core/colors\";\n\ninterface CirclePointProps {\n  angle: number;\n  radius: number;\n  thickness: number;\n}\n\nexport default class CirclePoint extends React.PureComponent<CirclePointProps> {\n  render() {\n    return (\n      <div\n        style={{\n          position: \"absolute\",\n          backgroundColor: grey[900],\n          width: this.props.thickness,\n          height: this.props.thickness,\n          top:\n            this.props.radius - this.props.radius * Math.sin(this.props.angle),\n          left:\n            this.props.radius + this.props.radius * Math.cos(this.props.angle),\n          borderRadius: \"50%\"\n        }}\n      ></div>\n    );\n  }\n}\n","import React from \"react\";\nimport CirclePoint from \"./CirclePoint\";\nimport { AppState } from \"../store/types\";\nimport { connect } from \"react-redux\";\n\ninterface CircleProps {\n  radius: number;\n  steps: number;\n  showCircle: boolean;\n}\n\nexport class Circle extends React.PureComponent<CircleProps> {\n  render() {\n    return (\n      <div\n        style={{\n          position: \"relative\",\n          margin: \"0 auto\",\n          marginTop: 10,\n          width: 2 * this.props.radius,\n          height: 2 * this.props.radius\n        }}\n      >\n        {this.props.showCircle\n          ? [...pointGenerator(this.props.steps, this.props.radius)]\n          : []}\n      </div>\n    );\n  }\n}\n\nfunction* pointGenerator(steps: number, radius: number) {\n  for (let i = 0; i < steps; i++) {\n    yield (\n      <CirclePoint\n        key={i}\n        angle={(i * (2 * Math.PI)) / steps}\n        radius={radius}\n        thickness={10}\n      ></CirclePoint>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  showCircle: state.showCircle\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Circle);\n","export interface AppState {\n  room: string;\n  live: boolean;\n  showCircle: boolean;\n  socket?: SocketIOClient.Socket;\n}\n\nexport const UPDATE_ROOM = \"UPDATE_ROOM\";\nexport const JOIN = \"JOIN\";\nexport const SET_SOCKET = \"SET_SOCKET\";\nexport const UPDATE_CIRCLE_VISIBILITY = \"UPDATE_CIRCLE_VISIBILITY\";\n\ninterface UpdateRoomAction {\n  type: typeof UPDATE_ROOM;\n  room: string;\n}\ninterface JoinAction {\n  type: typeof JOIN;\n}\ninterface SetSocketAction {\n  type: typeof SET_SOCKET;\n  socket: SocketIOClient.Socket;\n}\ninterface UpdateCircleVisibilityAction {\n  type: typeof UPDATE_CIRCLE_VISIBILITY;\n  showCircle: boolean;\n}\n\nexport type ActionTypes =\n  | UpdateRoomAction\n  | JoinAction\n  | SetSocketAction\n  | UpdateCircleVisibilityAction;\n","import React from \"react\";\nimport { Paper, Grid, TextField, Button, withStyles } from \"@material-ui/core\";\nimport { AppState } from \"../store/types\";\nimport { connect } from \"react-redux\";\nimport { updateRoom, join } from \"../store/actions\";\nimport { green } from \"@material-ui/core/colors\";\n\ninterface FormProps {\n  room: string;\n  live: boolean;\n  updateRoom: typeof updateRoom;\n  join: typeof join;\n  socket?: SocketIOClient.Socket;\n}\n\nfunction handleEnterKeyPress(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  cb: (e: any) => {}\n) {\n  if (e.key === \"Enter\") {\n    cb(e);\n    return true;\n  }\n  return false;\n}\n\nexport class Form extends React.PureComponent<FormProps> {\n  onInputChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    this.props.updateRoom(e.target.value);\n  };\n  onSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    this.props.join();\n  };\n  onShow = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    if (this.props.socket !== undefined) {\n      this.props.socket.emit(\"message\", { showCircle: true });\n    }\n  };\n  onHide = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    if (this.props.socket !== undefined) {\n      this.props.socket.emit(\"message\", { showCircle: false });\n    }\n  };\n\n  render() {\n    return (\n      <Paper style={{ margin: 14, padding: 14 }}>\n        <Grid container>\n          <Grid xs={10} item style={{ paddingRight: 14 }}>\n            <TextField\n              placeholder=\"Room name\"\n              value={this.props.room}\n              onChange={this.onInputChange}\n              onKeyPress={e =>\n                handleEnterKeyPress(e, this.onSubmit as () => {})\n              }\n              fullWidth\n              disabled={this.props.live}\n              color=\"primary\"\n            />\n          </Grid>\n          <Grid xs={2} item>\n            <Button\n              fullWidth\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={this.props.live}\n              onClick={this.onSubmit}\n            >\n              Join Room\n            </Button>\n          </Grid>\n        </Grid>\n        <br />\n        <Grid container>\n          <Grid xs={6} item style={{ paddingRight: 14 }}>\n            <GreenButton\n              fullWidth\n              variant=\"outlined\"\n              disabled={!this.props.live}\n              onClick={this.onShow}\n            >\n              Show Other User's Circle\n            </GreenButton>\n          </Grid>\n          <Grid xs={6} item>\n            <Button\n              fullWidth\n              color=\"secondary\"\n              variant=\"outlined\"\n              disabled={!this.props.live}\n              onClick={this.onHide}\n            >\n              Hide Other User's Circle\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  room: state.room,\n  live: state.live,\n  socket: state.socket\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateRoom, join }\n)(Form);\n\nconst GreenButton = withStyles(() => ({\n  root: {\n    color: green[700],\n    borderColor: green[500],\n    \"&:hover\": {\n      backgroundColor: green[100],\n      borderColor: green[700]\n    }\n  }\n}))(Button);\n","import {\n  UPDATE_ROOM,\n  JOIN,\n  SET_SOCKET,\n  UPDATE_CIRCLE_VISIBILITY\n} from \"./types\";\n\nexport function updateRoom(room: string) {\n  return {\n    type: UPDATE_ROOM,\n    room\n  };\n}\nexport function join() {\n  return {\n    type: JOIN\n  };\n}\nexport function setSocket(socket: SocketIOClient.Socket) {\n  return {\n    type: SET_SOCKET,\n    socket\n  };\n}\nexport function updateCircleVisibility(showCircle: boolean) {\n  return {\n    type: UPDATE_CIRCLE_VISIBILITY,\n    showCircle\n  };\n}\n","import React from \"react\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core\";\nimport { blue, pink } from \"@material-ui/core/colors\";\nimport { NavBar, Circle, Form } from \"./components\";\nimport io from \"socket.io-client\";\nimport { AppState } from \"./store/types\";\nimport { connect } from \"react-redux\";\nimport { setSocket, updateCircleVisibility } from \"./store/actions\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: pink\n  }\n});\n\ninterface AppProps {\n  socket?: SocketIOClient.Socket;\n  setSocket: typeof setSocket;\n  updateCircleVisibility: typeof updateCircleVisibility;\n}\n\nexport class App extends React.Component<AppProps> {\n  updateCircleVisibility = (showCircle: boolean) => {\n    if (showCircle !== undefined) {\n      this.props.updateCircleVisibility(showCircle);\n    }\n  };\n\n  componentDidMount() {\n    const socket = io(\"https://drf-eng-app-2019.herokuapp.com\");\n    const { updateCircleVisibility } = this.props;\n    socket.on(\"message\", function({ showCircle }: { showCircle: boolean }) {\n      console.log(`Received ${showCircle} message`);\n      updateCircleVisibility(showCircle);\n    });\n    this.props.setSocket(socket);\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <NavBar />\n          <Form />\n          <Circle radius={100} steps={1000} />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  socket: state.socket\n});\n\nexport default connect(\n  mapStateToProps,\n  { setSocket, updateCircleVisibility }\n)(App);\n","import {\n  UPDATE_ROOM,\n  AppState,\n  ActionTypes,\n  SET_SOCKET,\n  JOIN,\n  UPDATE_CIRCLE_VISIBILITY\n} from \"./types\";\nimport produce from \"immer\";\n\nconst initialState: AppState = {\n  room: \"\",\n  live: false,\n  showCircle: false,\n  socket: undefined\n};\n\nexport const rootReducer = (state = initialState, action: ActionTypes) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case UPDATE_ROOM:\n        draft.room = action.room;\n        break;\n      case JOIN:\n        console.log(\"Joining Room\", draft.room);\n        if (draft.socket) {\n          draft.socket.emit(\"join\", draft.room);\n        } else {\n          console.error(\"socket not defined\");\n        }\n        draft.live = true;\n        break;\n      case SET_SOCKET:\n        draft.socket = action.socket;\n        break;\n      case UPDATE_CIRCLE_VISIBILITY:\n        console.log(\"here\");\n        if (action.showCircle !== undefined) {\n          draft.showCircle = action.showCircle;\n        }\n    }\n  });\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { rootReducer } from \"./store/reducers\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}